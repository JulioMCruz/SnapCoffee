# Snap Coffee Backend Environment Configuration

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server port
PORT=3001

# Node environment (development, staging, production)
NODE_ENV=development

# API base URL
API_BASE_URL=http://localhost:3001

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://snapcoffee.xyz,https://codalabs.ngro.io

# JWT secret for session management
JWT_SECRET=your_super_secure_jwt_secret_key_here

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# FIREBASE CONFIGURATION
# =============================================================================

# Firebase project configuration
FIREBASE_PROJECT_ID=snap-coffee-prod
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@snap-coffee-prod.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_FIREBASE_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n"

# Firebase service account (alternative to individual fields above)
FIREBASE_SERVICE_ACCOUNT_KEY_PATH=./config/firebase-service-account.json

# Firebase Firestore database
FIRESTORE_DATABASE_ID=(default)

# Firebase Storage bucket
FIREBASE_STORAGE_BUCKET=snap-coffee-prod.appspot.com

# Firebase Storage configuration
FIREBASE_STORAGE_MAX_FILE_SIZE=10485760
FIREBASE_STORAGE_ALLOWED_TYPES=image/jpeg,image/png,image/webp

# =============================================================================
# COINBASE DEVELOPER PLATFORM (CDP)
# =============================================================================

# CDP API configuration
CDP_API_KEY_NAME=your_cdp_api_key_name
CDP_API_PRIVATE_KEY="-----BEGIN EC PRIVATE KEY-----\nYOUR_CDP_PRIVATE_KEY_HERE\n-----END EC PRIVATE KEY-----\n"

# CDP Server Wallet configuration
CDP_WALLET_ID=your_server_wallet_id
CDP_WALLET_SEED=your_wallet_seed_phrase_here

# CDP Network configuration (base-sepolia, base-mainnet)
CDP_NETWORK=base-sepolia

# =============================================================================
# BASE NETWORK & SMART CONTRACTS
# =============================================================================

# Base network RPC URLs
BASE_RPC_URL=https://mainnet.base.org
BASE_SEPOLIA_RPC_URL=https://sepolia.base.org

# Smart contract addresses (set after deployment)
LOYALTY_TOKEN_ADDRESS=0x1234567890123456789012345678901234567890
COUPON_NFT_ADDRESS=0x1234567890123456789012345678901234567890
SNAP_REGISTRY_ADDRESS=0x1234567890123456789012345678901234567890

# Contract interaction settings
GAS_LIMIT=500000
GAS_PRICE_MULTIPLIER=1.1
MAX_GAS_PRICE=50000000000

# =============================================================================
# FARCASTER INTEGRATION
# =============================================================================

# Farcaster configuration
FARCASTER_API_URL=https://api.farcaster.xyz
FARCASTER_API_KEY=your_farcaster_api_key

# Neynar API (for Farcaster data)
NEYNAR_API_KEY=your_neynar_api_key

# Hub URL for frame interactions
HUB_URL=https://hub-api.neynar.com

# Webhook configuration
WEBHOOK_SECRET=your_webhook_secret_key

# =============================================================================
# AI & MODERATION SERVICES
# =============================================================================

# OpenAI for image validation and CDP Agent Kit
OPENAI_API_KEY=your_openai_api_key
OPENAI_MODEL=gpt-4-vision-preview
OPENAI_MAX_TOKENS=1000

# CDP Agent Kit Configuration
CDP_API_KEY_NAME=your_cdp_api_key_name
CDP_API_KEY_PRIVATE_KEY=your_cdp_api_key_private_key
BEAN_TOKEN_ADDRESS=0x1234567890123456789012345678901234567890

# Server Wallet Configuration
MASTER_WALLET_ID=your_master_wallet_id
NFT_FACTORY_ADDRESS=0x2345678901234567890123456789012345678901

# Onramp Configuration
COINBASE_ONRAMP_APP_ID=your_coinbase_onramp_app_id

# Google Cloud Vision API (alternative/supplementary)
GOOGLE_VISION_API_KEY=your_google_vision_api_key
GOOGLE_CLOUD_PROJECT_ID=your_google_cloud_project

# Content moderation thresholds
MODERATION_CONFIDENCE_THRESHOLD=0.8
MODERATION_ADULT_THRESHOLD=0.7
MODERATION_VIOLENCE_THRESHOLD=0.7

# =============================================================================
# LOCATION & MAPS SERVICES
# =============================================================================

# Google Maps API for venue validation
GOOGLE_MAPS_API_KEY=your_google_maps_api_key

# Venue validation settings
VENUE_VALIDATION_RADIUS=100
VENUE_CACHE_DURATION=3600000

# =============================================================================
# SECURITY & ANTI-FRAUD
# =============================================================================

# Image hashing for duplicate detection
IMAGE_HASH_ALGORITHM=perceptual
DUPLICATE_THRESHOLD=0.9

# Rate limiting per user
USER_SNAP_COOLDOWN=3600000
DAILY_SNAP_LIMIT=10
FRAUD_DETECTION_THRESHOLD=3

# IP-based rate limiting
IP_RATE_LIMIT_WINDOW=900000
IP_RATE_LIMIT_MAX_REQUESTS=50

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Email service (SendGrid)
SENDGRID_API_KEY=your_sendgrid_api_key
FROM_EMAIL=noreply@snapcoffee.xyz

# Push notifications (Firebase Cloud Messaging)
FCM_SERVER_KEY=your_fcm_server_key

# Analytics (Mixpanel, Amplitude, etc.)
MIXPANEL_TOKEN=your_mixpanel_token
AMPLITUDE_API_KEY=your_amplitude_api_key

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json

# Error tracking (Sentry)
SENTRY_DSN=https://your_sentry_dsn@sentry.io/project_id

# Monitoring (DataDog, New Relic, etc.)
DATADOG_API_KEY=your_datadog_api_key
NEW_RELIC_LICENSE_KEY=your_new_relic_key

# =============================================================================
# CACHING & PERFORMANCE
# =============================================================================

# Redis configuration (optional)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password

# Cache settings
CACHE_TTL=300000
API_CACHE_ENABLED=true

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Development mode settings
DEBUG=snap-coffee:*
VERBOSE_LOGGING=false

# Testing database (separate Firebase project)
TEST_FIREBASE_PROJECT_ID=snap-coffee-test
TEST_FIREBASE_SERVICE_ACCOUNT_KEY_PATH=./config/firebase-test-service-account.json

# Mock services for testing
MOCK_AI_RESPONSES=false
MOCK_BLOCKCHAIN_CALLS=false
MOCK_LOCATION_SERVICES=false

# =============================================================================
# DEPLOYMENT & CI/CD
# =============================================================================

# Build configuration
BUILD_VERSION=1.0.0
BUILD_HASH=abc123def456

# Health check endpoints
HEALTH_CHECK_ENABLED=true
METRICS_ENABLED=true

# =============================================================================
# FIREBASE COLLECTIONS & SECURITY
# =============================================================================

# Firestore collection names
USERS_COLLECTION=users
SNAPS_COLLECTION=snaps
VENUES_COLLECTION=venues
REWARDS_COLLECTION=rewards
COUPONS_COLLECTION=coupons
ANALYTICS_COLLECTION=analytics

# Firebase Security Rules (for reference)
# - users: authenticated users can read/write their own data
# - snaps: public read, authenticated write with validation
# - venues: public read, admin write
# - rewards: server-only write, user read own data
# - coupons: server-only write, user read own data

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Replace all placeholder values with actual credentials
# 3. Never commit .env to version control
# 4. Use different .env files for different environments
# 5. Keep sensitive keys in secure key management systems for production

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 🔐 CRITICAL: Never commit the following to version control:
# - Firebase private keys
# - CDP private keys  
# - API keys and secrets
# - JWT secrets
# - Database credentials

# 🛡️  PRODUCTION SECURITY CHECKLIST:
# - Use environment-specific service accounts
# - Enable Firebase Security Rules
# - Set up proper CORS origins
# - Use strong JWT secrets (256-bit)
# - Enable rate limiting
# - Set up monitoring and alerts
# - Use HTTPS only
# - Implement proper error handling (don't expose internals)
# - Regular security audits and dependency updates

# =============================================================================
# FIREBASE SETUP INSTRUCTIONS
# =============================================================================

# 1. Create Firebase project at https://console.firebase.google.com
# 2. Enable Firestore Database
# 3. Enable Firebase Storage
# 4. Create service account:
#    - Go to Project Settings > Service Accounts
#    - Click "Generate new private key"
#    - Download JSON file and set path in FIREBASE_SERVICE_ACCOUNT_KEY_PATH
# 5. Set up Firestore security rules
# 6. Configure Storage CORS and security rules
# 7. Enable Firebase Authentication (if using)

# =============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATIONS
# =============================================================================

# Development (.env.development):
# - Use Firebase test project
# - Enable debug logging
# - Lower rate limits
# - Mock external services

# Staging (.env.staging):  
# - Use Firebase staging project
# - Production-like configuration
# - Moderate logging
# - Real external services

# Production (.env.production):
# - Use Firebase production project
# - Minimal logging (info/error only)
# - Strict rate limits
# - All security features enabled
# - Monitoring and alerts active